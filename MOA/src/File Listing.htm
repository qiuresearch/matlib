<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>File Listing</TITLE>
</HEAD>
<BODY>

<B><FONT SIZE=6><P ALIGN="CENTER">File Listing</P>
</B></FONT><FONT SIZE=4>
<P>&nbsp;</P>
<B><P>CCD_Corrrection.c</B> -  Fundamental C routines to perform intensity and image distortion correction.  Since these are well defined in TV6, and it has been extensively tested, this package is unlikely to give too much trouble.</P>

<B><P>correct_distortion.mex.c</B> -  Mex wrapper to access correct_distortion() in CCD_Correction.c</P>

<B><P>correct_intensity.mex.c</B> – Mex wrapper to access correct_intensity() in CCD_Correction.c</P>

<B><P>get_noise_data.mex.c</B> – Mex wrapper to access get_noise_data() in Zingers.c </P>

<B><P>get_noise_stats.mex.c</B> – Mex wrapper to access get_noise_stats() in Zingers.c</P>

<B><P>get_tag.c/mex.c</B> – A very short routine which reads the ATOD tags in images generated by TV6APS.  It doesn’t actually read the tiff so it is unlikely to work without modification on other tiffs.  It also won’t tell you if it is just returning garbage.  There is a better tiff reader in development taken directly from TV6 but it isn’t up and going yet.</P>

<B><P>Integrate.c</B> – Contains an integration routine to produce powder averages.</P>

<B><P>load_float_tiff.c</B> – Routine for Linux using tiffio.h which loads floating point tiffs written by TV6.  Only used to import image calibration maps.</P>

<B><P>radial_integral.mex.c</B> – Mex wrapper to access radial_intergral() in Integrate.c</P>

<B><P>remove_zingers.mex.c</B> – A Mex wrapper to the low level dezingering code.  This one actually gets rid of the zingers once given the statistical parameters for the noise model.</P>

<B><P>tiff.h</B> – Library stolen from linux which defines the tiff data types.  Only a tiny part of it is needed by Zinger.c</P>

<B><P>tiff_to_ascii.c</B> – Short routine which prompts for a filename, reads the floating point tiff in it and writes it to disk as an ascii file.  Only works on linux.  Compile with g++ tiff_to_ascii.c –ltiff.</P>

<B><P>Zingers.c</B> – Dezingering algorithm description.  Hopefully more methods will be added to this directory over time.</P>

<P>&nbsp;</P></FONT></BODY>
</HTML>
