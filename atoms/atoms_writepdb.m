function pdbdata = atoms_writepdb(atoms, file_pdb, varargin)
% --- Usage:
%        pdbdata = atoms_writepdb(atoms, file_pdb, varargin)
% --- Purpose
%        write the atoms structur to a PDB file
%
% --- Parameter(s):
%      atoms - the atoms structure
%      file_pdb - the PDB data file
%      varargin - 'hydrogen_rename'
%
% --- Return(s):
%      pdbdata - a character matrix same as the data file
%
% --- Calling Method(s):
%
% --- Example(s):
%
% $Id: atoms_writepdb.m,v 1.3 2013/02/28 16:52:10 schowell Exp $
% RATE: 4.0

% 1) Simple check on input parameters

if (nargin < 2)
  error('an ATOMS structure and PDB file should be provided!');
  return
end

% Set default property (options) values
verbose = 0;
hydrogen_rename = 0;
parse_varargin(varargin);

% 1) comment
comment{1} = 'REMARK    DNA structure generated by atoms_write.m';
comment{2} = ['REMARK    By Xiangyun Qiu @ ' date()];

% change Hydrogen names?
if (hydrogen_rename == 1)
   ihydro =  strmatch('H', strjust(atoms.name, 'left'));
   if ~isempty(ihydro)
      atoms.name(ihydro,:) = repmat('H   ', length(ihydro),1);
   end
end

% 2) atoms
num_atoms = length(atoms.element);
pdbdata = repmat(' ', num_atoms, 80);
pdbdata(:, 1:6) = atoms.type;
numdata = num2str(atoms.serialno, '%5d');
[num_dummy, num_cols] = size(numdata);
pdbdata(:, 11-num_cols+1:11) = numdata;
pdbdata(:,13:16) = atoms.name;
pdbdata(:,17) = atoms.altloc;
pdbdata(:,18:20) = atoms.resname;
pdbdata(:,22) = atoms.chainid;
pdbdata(:,23:27) = atoms.seqno;
numdata = num2str(atoms.position, '%8.2f');
[num_dummy, num_cols] = size(numdata);
pdbdata(:,54-num_cols+1:54) = numdata;

% 3) write to the file
fid = fopen(file_pdb, 'w');
fprintf(fid, '%s\n', comment{:});
for i=1:num_atoms
   fprintf(fid, '%s\n', pdbdata(i,:));
end
fprintf(fid, '%s\n', 'END');
fclose(fid);

